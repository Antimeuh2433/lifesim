List of mathematical equations used in LifeSim

Program inputs are inputs taken from already existing variables at call time (for example, student
intelligence, relationship quality with parents, teacher severity), whereas arguments are inputs given
at call time (for example, general multiplier or bonus)

Though the equations in this document are simplified and are not calculated the same way in code, the given
results are exactly the same.


1. generateStat
	Used to generate base statistics for a Person
	Program inputs : none
	Arguments : multiplier (float), bonus (int)
	Randomness : present
	
	The equation is as follows :
	(rand(0, 100) + rand(40, 110)a / 2 + b
	where a is the multiplier and b is the bonus.
	Special cases : returns 0 if {result < 0}, returns 100 if {result > 100}

	Samples are located in data/generateStats/generateStatResults.txt and can be generated with
	data/generateStats/generateStats.cpp. Results can be graphed with data/generateStats/viewStats.py,
	and the whole process can be automated by executing the scripts/debug/generate-stats.bat batch script.

	Declaration : headers/generateStat.h
	Definition : src/generateStat.cpp (int lsim::generateStat)


2. Grade generation algorithm
	Used to generate school grades
	Program inputs : student's intelligence and relation (happiness) stats (both range [0, 100]), teacher's
	severity stat (range [0, 100]), student's effort stats (range [0, 100])
	Randomness : present

	The equation is as follows :
	(0.6a + 44)(c/300 + 2/3) + 0.08b + 0.04d - rand(4, 8)
	where a is the student's intelligence stat, b is the student's relation stat (happiness), c is the
	teacher's severity stat and d is the student's effort stats.
	Special cases : (0.6a + 44) becomes (0.6a + 42) if {0.6a + 44 > 100}
	
	Samples are located in data/generateStats/gradeResults.txt and can be generated with
	data/generateStats/grade.cpp. Results can be graphed with data/generateStats/viewStats.py, and the whole
	process can be automated by executing the scripts/debug/generate-stats.bat batch script.

	Declaration : headers/classes/school.h
	Definition : src/classes/school.cpp (int lsim::School::updateGrades)


3. Drop out chance
	Used to calculate the chance of successfully dropping out if the character is less than 20 years old.
	Program inputs : character age, both parents' relation stat (range [0, 100])
	Arguments : none
	Randomness : none

	The equation is as follows if the character is 16 years old or less (in percentage of success):
	-0.05(a + b) + 8
	Otherwise, if the character is less than 20 years old (in percentage of success) :
	-0.2(a + b) + 80
	where a and b are the first and second parent's relation stat, respectively.
	Special cases : none

	Samples (character is 16 years old or less) :
	Average parent relation ((a + b) / 2) :	0		25		50		75		100
					Percentage of success :	8		5.5		3		0.5		-2
	
	Samples (character is between 17 and 20 years old) :
	Average parent relation ((a + b) / 2) :	0		25		50		75		100
					Percentage of success :	80		70		60		50		40

	Declaration : headers/classes/school.h
	Definition : src/classes/school.cpp (void lsim::School::goToMenu)


4. Stat inheritence
	Used to determine a newborn's stats from its parent's stats.
	Program inputs : all of the newborn's parents' stats
	Arguments : none
	Randomness : present

	The equation is as follows for all stats :
	ax - b(1 - x)
	where a and b are the first and second parent's intelligence stats, respectively, and x is 0.01rand(0, 100).
	Special cases : after a stat has been generated, x will change to (1 - x) for the next stat.

	Samples : none (equation based on randomly weighted average)

	Declaration : headers/classes/mainCharacter.h
	Definition : src/classes/mainCharacter.cpp (lsim::mainCharacter::mainCharacter)


5. Effort updating
	Used to update a person's efforts stat in their occupation
	Program inputs : efforts (range [0, 100])
	Arguments : more/less efforts (bool)
	Randomness : none

	The equation is as follows if more efforts are invested :
	2x/3 + 100/3
	Otherwise, the equation is as follows :
	2x / 3
	where x is the efforts stat
	Special cases : none

	Samples :
	Current efforts :	0		25		50		75		100
	Updated efforts :	33		50		67		83		100

	Declaration : headers/classes/occupation.h
	Definition : src/classes/occupation.cpp (int lsim::Occupation::putEfforts)


6. Parent initial relationship
	Used to define a parent's relationship stat with his newborn
	Program inputs : parent relationship stat (range [0, 100])
	Arguments : none

	The equation is as follows :
	0.5x + 50
	where x is the parent's relationship stat
	Special cases : none

	Samples :
	Current relationship :	0		25		50		75		100
	Updated relationship :	50		63		75		88		100

	Declaration : headers/classes/parent.h
	Definition : src/classes/parent.cpp (lsim::Parent::Parent)



Default values

1. Parent age at childbirth
	Female : between 24 and 33
	Male : between 26 and 35

2. Number of classmates
	Elementary school : between 22 and 28
	Middle and high school : between 24 and 30
	College : between 29 and 35

3. Teacher severity
	generateStat with a multiplier of 0.85
	Currently the only call of generateStat with non-default arguments.